/* automatically generated by rust-bindgen 0.71.1 */

pub const OQS_SIG_alg_dilithium_2: &[u8; 11] = b"Dilithium2\0";
pub const OQS_SIG_alg_dilithium_3: &[u8; 11] = b"Dilithium3\0";
pub const OQS_SIG_alg_dilithium_5: &[u8; 11] = b"Dilithium5\0";
pub const OQS_SIG_alg_ml_dsa_44: &[u8; 10] = b"ML-DSA-44\0";
pub const OQS_SIG_alg_ml_dsa_65: &[u8; 10] = b"ML-DSA-65\0";
pub const OQS_SIG_alg_ml_dsa_87: &[u8; 10] = b"ML-DSA-87\0";
pub const OQS_SIG_alg_falcon_512: &[u8; 11] = b"Falcon-512\0";
pub const OQS_SIG_alg_falcon_1024: &[u8; 12] = b"Falcon-1024\0";
pub const OQS_SIG_alg_falcon_padded_512: &[u8; 18] = b"Falcon-padded-512\0";
pub const OQS_SIG_alg_falcon_padded_1024: &[u8; 19] = b"Falcon-padded-1024\0";
pub const OQS_SIG_alg_sphincs_sha2_128f_simple: &[u8; 26] = b"SPHINCS+-SHA2-128f-simple\0";
pub const OQS_SIG_alg_sphincs_sha2_128s_simple: &[u8; 26] = b"SPHINCS+-SHA2-128s-simple\0";
pub const OQS_SIG_alg_sphincs_sha2_192f_simple: &[u8; 26] = b"SPHINCS+-SHA2-192f-simple\0";
pub const OQS_SIG_alg_sphincs_sha2_192s_simple: &[u8; 26] = b"SPHINCS+-SHA2-192s-simple\0";
pub const OQS_SIG_alg_sphincs_sha2_256f_simple: &[u8; 26] = b"SPHINCS+-SHA2-256f-simple\0";
pub const OQS_SIG_alg_sphincs_sha2_256s_simple: &[u8; 26] = b"SPHINCS+-SHA2-256s-simple\0";
pub const OQS_SIG_alg_sphincs_shake_128f_simple: &[u8; 27] = b"SPHINCS+-SHAKE-128f-simple\0";
pub const OQS_SIG_alg_sphincs_shake_128s_simple: &[u8; 27] = b"SPHINCS+-SHAKE-128s-simple\0";
pub const OQS_SIG_alg_sphincs_shake_192f_simple: &[u8; 27] = b"SPHINCS+-SHAKE-192f-simple\0";
pub const OQS_SIG_alg_sphincs_shake_192s_simple: &[u8; 27] = b"SPHINCS+-SHAKE-192s-simple\0";
pub const OQS_SIG_alg_sphincs_shake_256f_simple: &[u8; 27] = b"SPHINCS+-SHAKE-256f-simple\0";
pub const OQS_SIG_alg_sphincs_shake_256s_simple: &[u8; 27] = b"SPHINCS+-SHAKE-256s-simple\0";
pub const OQS_SIG_alg_mayo_1: &[u8; 7] = b"MAYO-1\0";
pub const OQS_SIG_alg_mayo_2: &[u8; 7] = b"MAYO-2\0";
pub const OQS_SIG_alg_mayo_3: &[u8; 7] = b"MAYO-3\0";
pub const OQS_SIG_alg_mayo_5: &[u8; 7] = b"MAYO-5\0";
pub const OQS_SIG_alg_cross_rsdp_128_balanced: &[u8; 24] = b"cross-rsdp-128-balanced\0";
pub const OQS_SIG_alg_cross_rsdp_128_fast: &[u8; 20] = b"cross-rsdp-128-fast\0";
pub const OQS_SIG_alg_cross_rsdp_128_small: &[u8; 21] = b"cross-rsdp-128-small\0";
pub const OQS_SIG_alg_cross_rsdp_192_balanced: &[u8; 24] = b"cross-rsdp-192-balanced\0";
pub const OQS_SIG_alg_cross_rsdp_192_fast: &[u8; 20] = b"cross-rsdp-192-fast\0";
pub const OQS_SIG_alg_cross_rsdp_192_small: &[u8; 21] = b"cross-rsdp-192-small\0";
pub const OQS_SIG_alg_cross_rsdp_256_balanced: &[u8; 24] = b"cross-rsdp-256-balanced\0";
pub const OQS_SIG_alg_cross_rsdp_256_fast: &[u8; 20] = b"cross-rsdp-256-fast\0";
pub const OQS_SIG_alg_cross_rsdp_256_small: &[u8; 21] = b"cross-rsdp-256-small\0";
pub const OQS_SIG_alg_cross_rsdpg_128_balanced: &[u8; 25] = b"cross-rsdpg-128-balanced\0";
pub const OQS_SIG_alg_cross_rsdpg_128_fast: &[u8; 21] = b"cross-rsdpg-128-fast\0";
pub const OQS_SIG_alg_cross_rsdpg_128_small: &[u8; 22] = b"cross-rsdpg-128-small\0";
pub const OQS_SIG_alg_cross_rsdpg_192_balanced: &[u8; 25] = b"cross-rsdpg-192-balanced\0";
pub const OQS_SIG_alg_cross_rsdpg_192_fast: &[u8; 21] = b"cross-rsdpg-192-fast\0";
pub const OQS_SIG_alg_cross_rsdpg_192_small: &[u8; 22] = b"cross-rsdpg-192-small\0";
pub const OQS_SIG_alg_cross_rsdpg_256_balanced: &[u8; 25] = b"cross-rsdpg-256-balanced\0";
pub const OQS_SIG_alg_cross_rsdpg_256_fast: &[u8; 21] = b"cross-rsdpg-256-fast\0";
pub const OQS_SIG_alg_cross_rsdpg_256_small: &[u8; 22] = b"cross-rsdpg-256-small\0";
pub const OQS_SIG_alg_uov_ov_Is: &[u8; 6] = b"OV-Is\0";
pub const OQS_SIG_alg_uov_ov_Ip: &[u8; 6] = b"OV-Ip\0";
pub const OQS_SIG_alg_uov_ov_III: &[u8; 7] = b"OV-III\0";
pub const OQS_SIG_alg_uov_ov_V: &[u8; 5] = b"OV-V\0";
pub const OQS_SIG_alg_uov_ov_Is_pkc: &[u8; 10] = b"OV-Is-pkc\0";
pub const OQS_SIG_alg_uov_ov_Ip_pkc: &[u8; 10] = b"OV-Ip-pkc\0";
pub const OQS_SIG_alg_uov_ov_III_pkc: &[u8; 11] = b"OV-III-pkc\0";
pub const OQS_SIG_alg_uov_ov_V_pkc: &[u8; 9] = b"OV-V-pkc\0";
pub const OQS_SIG_alg_uov_ov_Is_pkc_skc: &[u8; 14] = b"OV-Is-pkc-skc\0";
pub const OQS_SIG_alg_uov_ov_Ip_pkc_skc: &[u8; 14] = b"OV-Ip-pkc-skc\0";
pub const OQS_SIG_alg_uov_ov_III_pkc_skc: &[u8; 15] = b"OV-III-pkc-skc\0";
pub const OQS_SIG_alg_uov_ov_V_pkc_skc: &[u8; 13] = b"OV-V-pkc-skc\0";
pub const OQS_SIG_algs_length: u32 = 56;
pub const OQS_SIG_dilithium_2_length_public_key: u32 = 1312;
pub const OQS_SIG_dilithium_2_length_secret_key: u32 = 2528;
pub const OQS_SIG_dilithium_2_length_signature: u32 = 2420;
pub const OQS_SIG_dilithium_3_length_public_key: u32 = 1952;
pub const OQS_SIG_dilithium_3_length_secret_key: u32 = 4000;
pub const OQS_SIG_dilithium_3_length_signature: u32 = 3293;
pub const OQS_SIG_dilithium_5_length_public_key: u32 = 2592;
pub const OQS_SIG_dilithium_5_length_secret_key: u32 = 4864;
pub const OQS_SIG_dilithium_5_length_signature: u32 = 4595;
pub const OQS_SIG_ml_dsa_44_length_public_key: u32 = 1312;
pub const OQS_SIG_ml_dsa_44_length_secret_key: u32 = 2560;
pub const OQS_SIG_ml_dsa_44_length_signature: u32 = 2420;
pub const OQS_SIG_ml_dsa_65_length_public_key: u32 = 1952;
pub const OQS_SIG_ml_dsa_65_length_secret_key: u32 = 4032;
pub const OQS_SIG_ml_dsa_65_length_signature: u32 = 3309;
pub const OQS_SIG_ml_dsa_87_length_public_key: u32 = 2592;
pub const OQS_SIG_ml_dsa_87_length_secret_key: u32 = 4896;
pub const OQS_SIG_ml_dsa_87_length_signature: u32 = 4627;
pub const OQS_SIG_falcon_512_length_public_key: u32 = 897;
pub const OQS_SIG_falcon_512_length_secret_key: u32 = 1281;
pub const OQS_SIG_falcon_512_length_signature: u32 = 752;
pub const OQS_SIG_falcon_1024_length_public_key: u32 = 1793;
pub const OQS_SIG_falcon_1024_length_secret_key: u32 = 2305;
pub const OQS_SIG_falcon_1024_length_signature: u32 = 1462;
pub const OQS_SIG_falcon_padded_512_length_public_key: u32 = 897;
pub const OQS_SIG_falcon_padded_512_length_secret_key: u32 = 1281;
pub const OQS_SIG_falcon_padded_512_length_signature: u32 = 666;
pub const OQS_SIG_falcon_padded_1024_length_public_key: u32 = 1793;
pub const OQS_SIG_falcon_padded_1024_length_secret_key: u32 = 2305;
pub const OQS_SIG_falcon_padded_1024_length_signature: u32 = 1280;
pub const OQS_SIG_sphincs_sha2_128f_simple_length_public_key: u32 = 32;
pub const OQS_SIG_sphincs_sha2_128f_simple_length_secret_key: u32 = 64;
pub const OQS_SIG_sphincs_sha2_128f_simple_length_signature: u32 = 17088;
pub const OQS_SIG_sphincs_sha2_128s_simple_length_public_key: u32 = 32;
pub const OQS_SIG_sphincs_sha2_128s_simple_length_secret_key: u32 = 64;
pub const OQS_SIG_sphincs_sha2_128s_simple_length_signature: u32 = 7856;
pub const OQS_SIG_sphincs_sha2_192f_simple_length_public_key: u32 = 48;
pub const OQS_SIG_sphincs_sha2_192f_simple_length_secret_key: u32 = 96;
pub const OQS_SIG_sphincs_sha2_192f_simple_length_signature: u32 = 35664;
pub const OQS_SIG_sphincs_sha2_192s_simple_length_public_key: u32 = 48;
pub const OQS_SIG_sphincs_sha2_192s_simple_length_secret_key: u32 = 96;
pub const OQS_SIG_sphincs_sha2_192s_simple_length_signature: u32 = 16224;
pub const OQS_SIG_sphincs_sha2_256f_simple_length_public_key: u32 = 64;
pub const OQS_SIG_sphincs_sha2_256f_simple_length_secret_key: u32 = 128;
pub const OQS_SIG_sphincs_sha2_256f_simple_length_signature: u32 = 49856;
pub const OQS_SIG_sphincs_sha2_256s_simple_length_public_key: u32 = 64;
pub const OQS_SIG_sphincs_sha2_256s_simple_length_secret_key: u32 = 128;
pub const OQS_SIG_sphincs_sha2_256s_simple_length_signature: u32 = 29792;
pub const OQS_SIG_sphincs_shake_128f_simple_length_public_key: u32 = 32;
pub const OQS_SIG_sphincs_shake_128f_simple_length_secret_key: u32 = 64;
pub const OQS_SIG_sphincs_shake_128f_simple_length_signature: u32 = 17088;
pub const OQS_SIG_sphincs_shake_128s_simple_length_public_key: u32 = 32;
pub const OQS_SIG_sphincs_shake_128s_simple_length_secret_key: u32 = 64;
pub const OQS_SIG_sphincs_shake_128s_simple_length_signature: u32 = 7856;
pub const OQS_SIG_sphincs_shake_192f_simple_length_public_key: u32 = 48;
pub const OQS_SIG_sphincs_shake_192f_simple_length_secret_key: u32 = 96;
pub const OQS_SIG_sphincs_shake_192f_simple_length_signature: u32 = 35664;
pub const OQS_SIG_sphincs_shake_192s_simple_length_public_key: u32 = 48;
pub const OQS_SIG_sphincs_shake_192s_simple_length_secret_key: u32 = 96;
pub const OQS_SIG_sphincs_shake_192s_simple_length_signature: u32 = 16224;
pub const OQS_SIG_sphincs_shake_256f_simple_length_public_key: u32 = 64;
pub const OQS_SIG_sphincs_shake_256f_simple_length_secret_key: u32 = 128;
pub const OQS_SIG_sphincs_shake_256f_simple_length_signature: u32 = 49856;
pub const OQS_SIG_sphincs_shake_256s_simple_length_public_key: u32 = 64;
pub const OQS_SIG_sphincs_shake_256s_simple_length_secret_key: u32 = 128;
pub const OQS_SIG_sphincs_shake_256s_simple_length_signature: u32 = 29792;
pub const OQS_SIG_mayo_1_length_public_key: u32 = 1420;
pub const OQS_SIG_mayo_1_length_secret_key: u32 = 24;
pub const OQS_SIG_mayo_1_length_signature: u32 = 454;
pub const OQS_SIG_mayo_2_length_public_key: u32 = 4912;
pub const OQS_SIG_mayo_2_length_secret_key: u32 = 24;
pub const OQS_SIG_mayo_2_length_signature: u32 = 186;
pub const OQS_SIG_mayo_3_length_public_key: u32 = 2986;
pub const OQS_SIG_mayo_3_length_secret_key: u32 = 32;
pub const OQS_SIG_mayo_3_length_signature: u32 = 681;
pub const OQS_SIG_mayo_5_length_public_key: u32 = 5554;
pub const OQS_SIG_mayo_5_length_secret_key: u32 = 40;
pub const OQS_SIG_mayo_5_length_signature: u32 = 964;
pub const OQS_SIG_cross_rsdp_128_balanced_length_public_key: u32 = 77;
pub const OQS_SIG_cross_rsdp_128_balanced_length_secret_key: u32 = 32;
pub const OQS_SIG_cross_rsdp_128_balanced_length_signature: u32 = 13152;
pub const OQS_SIG_cross_rsdp_128_fast_length_public_key: u32 = 77;
pub const OQS_SIG_cross_rsdp_128_fast_length_secret_key: u32 = 32;
pub const OQS_SIG_cross_rsdp_128_fast_length_signature: u32 = 18432;
pub const OQS_SIG_cross_rsdp_128_small_length_public_key: u32 = 77;
pub const OQS_SIG_cross_rsdp_128_small_length_secret_key: u32 = 32;
pub const OQS_SIG_cross_rsdp_128_small_length_signature: u32 = 12432;
pub const OQS_SIG_cross_rsdp_192_balanced_length_public_key: u32 = 115;
pub const OQS_SIG_cross_rsdp_192_balanced_length_secret_key: u32 = 48;
pub const OQS_SIG_cross_rsdp_192_balanced_length_signature: u32 = 29853;
pub const OQS_SIG_cross_rsdp_192_fast_length_public_key: u32 = 115;
pub const OQS_SIG_cross_rsdp_192_fast_length_secret_key: u32 = 48;
pub const OQS_SIG_cross_rsdp_192_fast_length_signature: u32 = 41406;
pub const OQS_SIG_cross_rsdp_192_small_length_public_key: u32 = 115;
pub const OQS_SIG_cross_rsdp_192_small_length_secret_key: u32 = 48;
pub const OQS_SIG_cross_rsdp_192_small_length_signature: u32 = 28391;
pub const OQS_SIG_cross_rsdp_256_balanced_length_public_key: u32 = 153;
pub const OQS_SIG_cross_rsdp_256_balanced_length_secret_key: u32 = 64;
pub const OQS_SIG_cross_rsdp_256_balanced_length_signature: u32 = 53527;
pub const OQS_SIG_cross_rsdp_256_fast_length_public_key: u32 = 153;
pub const OQS_SIG_cross_rsdp_256_fast_length_secret_key: u32 = 64;
pub const OQS_SIG_cross_rsdp_256_fast_length_signature: u32 = 74590;
pub const OQS_SIG_cross_rsdp_256_small_length_public_key: u32 = 153;
pub const OQS_SIG_cross_rsdp_256_small_length_secret_key: u32 = 64;
pub const OQS_SIG_cross_rsdp_256_small_length_signature: u32 = 50818;
pub const OQS_SIG_cross_rsdpg_128_balanced_length_public_key: u32 = 54;
pub const OQS_SIG_cross_rsdpg_128_balanced_length_secret_key: u32 = 32;
pub const OQS_SIG_cross_rsdpg_128_balanced_length_signature: u32 = 9120;
pub const OQS_SIG_cross_rsdpg_128_fast_length_public_key: u32 = 54;
pub const OQS_SIG_cross_rsdpg_128_fast_length_secret_key: u32 = 32;
pub const OQS_SIG_cross_rsdpg_128_fast_length_signature: u32 = 11980;
pub const OQS_SIG_cross_rsdpg_128_small_length_public_key: u32 = 54;
pub const OQS_SIG_cross_rsdpg_128_small_length_secret_key: u32 = 32;
pub const OQS_SIG_cross_rsdpg_128_small_length_signature: u32 = 8960;
pub const OQS_SIG_cross_rsdpg_192_balanced_length_public_key: u32 = 83;
pub const OQS_SIG_cross_rsdpg_192_balanced_length_secret_key: u32 = 48;
pub const OQS_SIG_cross_rsdpg_192_balanced_length_signature: u32 = 22464;
pub const OQS_SIG_cross_rsdpg_192_fast_length_public_key: u32 = 83;
pub const OQS_SIG_cross_rsdpg_192_fast_length_secret_key: u32 = 48;
pub const OQS_SIG_cross_rsdpg_192_fast_length_signature: u32 = 26772;
pub const OQS_SIG_cross_rsdpg_192_small_length_public_key: u32 = 83;
pub const OQS_SIG_cross_rsdpg_192_small_length_secret_key: u32 = 48;
pub const OQS_SIG_cross_rsdpg_192_small_length_signature: u32 = 20452;
pub const OQS_SIG_cross_rsdpg_256_balanced_length_public_key: u32 = 106;
pub const OQS_SIG_cross_rsdpg_256_balanced_length_secret_key: u32 = 64;
pub const OQS_SIG_cross_rsdpg_256_balanced_length_signature: u32 = 40100;
pub const OQS_SIG_cross_rsdpg_256_fast_length_public_key: u32 = 106;
pub const OQS_SIG_cross_rsdpg_256_fast_length_secret_key: u32 = 64;
pub const OQS_SIG_cross_rsdpg_256_fast_length_signature: u32 = 48102;
pub const OQS_SIG_cross_rsdpg_256_small_length_public_key: u32 = 106;
pub const OQS_SIG_cross_rsdpg_256_small_length_secret_key: u32 = 64;
pub const OQS_SIG_cross_rsdpg_256_small_length_signature: u32 = 36454;
pub const OQS_SIG_uov_ov_Is_length_public_key: u32 = 412160;
pub const OQS_SIG_uov_ov_Is_length_secret_key: u32 = 348704;
pub const OQS_SIG_uov_ov_Is_length_signature: u32 = 96;
pub const OQS_SIG_uov_ov_Ip_length_public_key: u32 = 278432;
pub const OQS_SIG_uov_ov_Ip_length_secret_key: u32 = 237896;
pub const OQS_SIG_uov_ov_Ip_length_signature: u32 = 128;
pub const OQS_SIG_uov_ov_III_length_public_key: u32 = 1225440;
pub const OQS_SIG_uov_ov_III_length_secret_key: u32 = 1044320;
pub const OQS_SIG_uov_ov_III_length_signature: u32 = 200;
pub const OQS_SIG_uov_ov_V_length_public_key: u32 = 2869440;
pub const OQS_SIG_uov_ov_V_length_secret_key: u32 = 2436704;
pub const OQS_SIG_uov_ov_V_length_signature: u32 = 260;
pub const OQS_SIG_uov_ov_Is_pkc_length_public_key: u32 = 66576;
pub const OQS_SIG_uov_ov_Is_pkc_length_secret_key: u32 = 348704;
pub const OQS_SIG_uov_ov_Is_pkc_length_signature: u32 = 96;
pub const OQS_SIG_uov_ov_Ip_pkc_length_public_key: u32 = 43576;
pub const OQS_SIG_uov_ov_Ip_pkc_length_secret_key: u32 = 237896;
pub const OQS_SIG_uov_ov_Ip_pkc_length_signature: u32 = 128;
pub const OQS_SIG_uov_ov_III_pkc_length_public_key: u32 = 189232;
pub const OQS_SIG_uov_ov_III_pkc_length_secret_key: u32 = 1044320;
pub const OQS_SIG_uov_ov_III_pkc_length_signature: u32 = 200;
pub const OQS_SIG_uov_ov_V_pkc_length_public_key: u32 = 446992;
pub const OQS_SIG_uov_ov_V_pkc_length_secret_key: u32 = 2436704;
pub const OQS_SIG_uov_ov_V_pkc_length_signature: u32 = 260;
pub const OQS_SIG_uov_ov_Is_pkc_skc_length_public_key: u32 = 66576;
pub const OQS_SIG_uov_ov_Is_pkc_skc_length_secret_key: u32 = 32;
pub const OQS_SIG_uov_ov_Is_pkc_skc_length_signature: u32 = 96;
pub const OQS_SIG_uov_ov_Ip_pkc_skc_length_public_key: u32 = 43576;
pub const OQS_SIG_uov_ov_Ip_pkc_skc_length_secret_key: u32 = 32;
pub const OQS_SIG_uov_ov_Ip_pkc_skc_length_signature: u32 = 128;
pub const OQS_SIG_uov_ov_III_pkc_skc_length_public_key: u32 = 189232;
pub const OQS_SIG_uov_ov_III_pkc_skc_length_secret_key: u32 = 32;
pub const OQS_SIG_uov_ov_III_pkc_skc_length_signature: u32 = 200;
pub const OQS_SIG_uov_ov_V_pkc_skc_length_public_key: u32 = 446992;
pub const OQS_SIG_uov_ov_V_pkc_skc_length_secret_key: u32 = 32;
pub const OQS_SIG_uov_ov_V_pkc_skc_length_signature: u32 = 260;
unsafe extern "C" {
    pub fn OQS_SIG_alg_identifier(i: usize) -> *const ::libc::c_char;
}
unsafe extern "C" {
    pub fn OQS_SIG_alg_count() -> ::libc::c_int;
}
unsafe extern "C" {
    pub fn OQS_SIG_alg_is_enabled(method_name: *const ::libc::c_char) -> ::libc::c_int;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct OQS_SIG {
    pub method_name: *const ::libc::c_char,
    pub alg_version: *const ::libc::c_char,
    pub claimed_nist_level: u8,
    pub euf_cma: bool,
    pub suf_cma: bool,
    pub sig_with_ctx_support: bool,
    pub length_public_key: usize,
    pub length_secret_key: usize,
    pub length_signature: usize,
    pub keypair: ::core::option::Option<
        unsafe extern "C" fn(public_key: *mut u8, secret_key: *mut u8) -> OQS_STATUS,
    >,
    pub sign: ::core::option::Option<
        unsafe extern "C" fn(
            signature: *mut u8,
            signature_len: *mut usize,
            message: *const u8,
            message_len: usize,
            secret_key: *const u8,
        ) -> OQS_STATUS,
    >,
    pub sign_with_ctx_str: ::core::option::Option<
        unsafe extern "C" fn(
            signature: *mut u8,
            signature_len: *mut usize,
            message: *const u8,
            message_len: usize,
            ctx_str: *const u8,
            ctx_str_len: usize,
            secret_key: *const u8,
        ) -> OQS_STATUS,
    >,
    pub verify: ::core::option::Option<
        unsafe extern "C" fn(
            message: *const u8,
            message_len: usize,
            signature: *const u8,
            signature_len: usize,
            public_key: *const u8,
        ) -> OQS_STATUS,
    >,
    pub verify_with_ctx_str: ::core::option::Option<
        unsafe extern "C" fn(
            message: *const u8,
            message_len: usize,
            signature: *const u8,
            signature_len: usize,
            ctx_str: *const u8,
            ctx_str_len: usize,
            public_key: *const u8,
        ) -> OQS_STATUS,
    >,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of OQS_SIG"][::core::mem::size_of::<OQS_SIG>() - 88usize];
    ["Alignment of OQS_SIG"][::core::mem::align_of::<OQS_SIG>() - 8usize];
    ["Offset of field: OQS_SIG::method_name"]
        [::core::mem::offset_of!(OQS_SIG, method_name) - 0usize];
    ["Offset of field: OQS_SIG::alg_version"]
        [::core::mem::offset_of!(OQS_SIG, alg_version) - 8usize];
    ["Offset of field: OQS_SIG::claimed_nist_level"]
        [::core::mem::offset_of!(OQS_SIG, claimed_nist_level) - 16usize];
    ["Offset of field: OQS_SIG::euf_cma"][::core::mem::offset_of!(OQS_SIG, euf_cma) - 17usize];
    ["Offset of field: OQS_SIG::suf_cma"][::core::mem::offset_of!(OQS_SIG, suf_cma) - 18usize];
    ["Offset of field: OQS_SIG::sig_with_ctx_support"]
        [::core::mem::offset_of!(OQS_SIG, sig_with_ctx_support) - 19usize];
    ["Offset of field: OQS_SIG::length_public_key"]
        [::core::mem::offset_of!(OQS_SIG, length_public_key) - 24usize];
    ["Offset of field: OQS_SIG::length_secret_key"]
        [::core::mem::offset_of!(OQS_SIG, length_secret_key) - 32usize];
    ["Offset of field: OQS_SIG::length_signature"]
        [::core::mem::offset_of!(OQS_SIG, length_signature) - 40usize];
    ["Offset of field: OQS_SIG::keypair"][::core::mem::offset_of!(OQS_SIG, keypair) - 48usize];
    ["Offset of field: OQS_SIG::sign"][::core::mem::offset_of!(OQS_SIG, sign) - 56usize];
    ["Offset of field: OQS_SIG::sign_with_ctx_str"]
        [::core::mem::offset_of!(OQS_SIG, sign_with_ctx_str) - 64usize];
    ["Offset of field: OQS_SIG::verify"][::core::mem::offset_of!(OQS_SIG, verify) - 72usize];
    ["Offset of field: OQS_SIG::verify_with_ctx_str"]
        [::core::mem::offset_of!(OQS_SIG, verify_with_ctx_str) - 80usize];
};
unsafe extern "C" {
    pub fn OQS_SIG_new(method_name: *const ::libc::c_char) -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_keypair(
        sig: *const OQS_SIG,
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sign(
        sig: *const OQS_SIG,
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sign_with_ctx_str(
        sig: *const OQS_SIG,
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx_str: *const u8,
        ctx_str_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_verify(
        sig: *const OQS_SIG,
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_verify_with_ctx_str(
        sig: *const OQS_SIG,
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx_str: *const u8,
        ctx_str_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_free(sig: *mut OQS_SIG);
}
unsafe extern "C" {
    pub fn OQS_SIG_dilithium_2_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_dilithium_2_keypair(public_key: *mut u8, secret_key: *mut u8) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_dilithium_2_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_dilithium_2_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_dilithium_2_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_dilithium_2_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_dilithium_3_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_dilithium_3_keypair(public_key: *mut u8, secret_key: *mut u8) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_dilithium_3_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_dilithium_3_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_dilithium_3_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_dilithium_3_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_dilithium_5_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_dilithium_5_keypair(public_key: *mut u8, secret_key: *mut u8) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_dilithium_5_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_dilithium_5_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_dilithium_5_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_dilithium_5_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_ml_dsa_44_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_ml_dsa_44_keypair(public_key: *mut u8, secret_key: *mut u8) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_ml_dsa_44_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_ml_dsa_44_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_ml_dsa_44_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_ml_dsa_44_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_ml_dsa_65_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_ml_dsa_65_keypair(public_key: *mut u8, secret_key: *mut u8) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_ml_dsa_65_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_ml_dsa_65_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_ml_dsa_65_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_ml_dsa_65_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_ml_dsa_87_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_ml_dsa_87_keypair(public_key: *mut u8, secret_key: *mut u8) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_ml_dsa_87_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_ml_dsa_87_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_ml_dsa_87_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_ml_dsa_87_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_falcon_512_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_falcon_512_keypair(public_key: *mut u8, secret_key: *mut u8) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_falcon_512_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_falcon_512_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_falcon_512_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_falcon_512_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_falcon_1024_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_falcon_1024_keypair(public_key: *mut u8, secret_key: *mut u8) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_falcon_1024_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_falcon_1024_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_falcon_1024_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_falcon_1024_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_falcon_padded_512_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_falcon_padded_512_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_falcon_padded_512_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_falcon_padded_512_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_falcon_padded_512_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_falcon_padded_512_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_falcon_padded_1024_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_falcon_padded_1024_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_falcon_padded_1024_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_falcon_padded_1024_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_falcon_padded_1024_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_falcon_padded_1024_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_128f_simple_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_128f_simple_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_128f_simple_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_128f_simple_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_128f_simple_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_128f_simple_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_128s_simple_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_128s_simple_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_128s_simple_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_128s_simple_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_128s_simple_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_128s_simple_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_192f_simple_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_192f_simple_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_192f_simple_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_192f_simple_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_192f_simple_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_192f_simple_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_192s_simple_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_192s_simple_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_192s_simple_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_192s_simple_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_192s_simple_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_192s_simple_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_256f_simple_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_256f_simple_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_256f_simple_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_256f_simple_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_256f_simple_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_256f_simple_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_256s_simple_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_256s_simple_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_256s_simple_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_256s_simple_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_256s_simple_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_sha2_256s_simple_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_128f_simple_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_128f_simple_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_128f_simple_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_128f_simple_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_128f_simple_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_128f_simple_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_128s_simple_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_128s_simple_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_128s_simple_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_128s_simple_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_128s_simple_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_128s_simple_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_192f_simple_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_192f_simple_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_192f_simple_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_192f_simple_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_192f_simple_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_192f_simple_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_192s_simple_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_192s_simple_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_192s_simple_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_192s_simple_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_192s_simple_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_192s_simple_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_256f_simple_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_256f_simple_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_256f_simple_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_256f_simple_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_256f_simple_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_256f_simple_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_256s_simple_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_256s_simple_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_256s_simple_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_256s_simple_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_256s_simple_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_sphincs_shake_256s_simple_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_mayo_1_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_mayo_1_keypair(public_key: *mut u8, secret_key: *mut u8) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_mayo_1_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_mayo_1_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_mayo_1_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_mayo_1_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_mayo_2_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_mayo_2_keypair(public_key: *mut u8, secret_key: *mut u8) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_mayo_2_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_mayo_2_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_mayo_2_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_mayo_2_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_mayo_3_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_mayo_3_keypair(public_key: *mut u8, secret_key: *mut u8) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_mayo_3_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_mayo_3_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_mayo_3_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_mayo_3_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_mayo_5_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_mayo_5_keypair(public_key: *mut u8, secret_key: *mut u8) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_mayo_5_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_mayo_5_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_mayo_5_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_mayo_5_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_128_balanced_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_128_balanced_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_128_balanced_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_128_balanced_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_128_balanced_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_128_balanced_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_128_fast_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_128_fast_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_128_fast_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_128_fast_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_128_fast_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_128_fast_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_128_small_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_128_small_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_128_small_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_128_small_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_128_small_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_128_small_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_192_balanced_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_192_balanced_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_192_balanced_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_192_balanced_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_192_balanced_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_192_balanced_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_192_fast_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_192_fast_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_192_fast_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_192_fast_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_192_fast_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_192_fast_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_192_small_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_192_small_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_192_small_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_192_small_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_192_small_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_192_small_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_256_balanced_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_256_balanced_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_256_balanced_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_256_balanced_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_256_balanced_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_256_balanced_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_256_fast_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_256_fast_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_256_fast_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_256_fast_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_256_fast_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_256_fast_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_256_small_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_256_small_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_256_small_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_256_small_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_256_small_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdp_256_small_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_128_balanced_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_128_balanced_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_128_balanced_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_128_balanced_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_128_balanced_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_128_balanced_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_128_fast_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_128_fast_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_128_fast_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_128_fast_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_128_fast_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_128_fast_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_128_small_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_128_small_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_128_small_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_128_small_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_128_small_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_128_small_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_192_balanced_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_192_balanced_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_192_balanced_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_192_balanced_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_192_balanced_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_192_balanced_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_192_fast_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_192_fast_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_192_fast_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_192_fast_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_192_fast_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_192_fast_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_192_small_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_192_small_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_192_small_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_192_small_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_192_small_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_192_small_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_256_balanced_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_256_balanced_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_256_balanced_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_256_balanced_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_256_balanced_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_256_balanced_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_256_fast_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_256_fast_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_256_fast_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_256_fast_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_256_fast_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_256_fast_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_256_small_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_256_small_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_256_small_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_256_small_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_256_small_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_cross_rsdpg_256_small_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Is_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Is_keypair(public_key: *mut u8, secret_key: *mut u8) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Is_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Is_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Is_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Is_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Ip_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Ip_keypair(public_key: *mut u8, secret_key: *mut u8) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Ip_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Ip_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Ip_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Ip_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_III_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_III_keypair(public_key: *mut u8, secret_key: *mut u8) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_III_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_III_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_III_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_III_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_V_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_V_keypair(public_key: *mut u8, secret_key: *mut u8) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_V_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_V_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_V_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_V_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Is_pkc_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Is_pkc_keypair(public_key: *mut u8, secret_key: *mut u8) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Is_pkc_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Is_pkc_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Is_pkc_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Is_pkc_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Ip_pkc_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Ip_pkc_keypair(public_key: *mut u8, secret_key: *mut u8) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Ip_pkc_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Ip_pkc_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Ip_pkc_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Ip_pkc_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_III_pkc_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_III_pkc_keypair(public_key: *mut u8, secret_key: *mut u8) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_III_pkc_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_III_pkc_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_III_pkc_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_III_pkc_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_V_pkc_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_V_pkc_keypair(public_key: *mut u8, secret_key: *mut u8) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_V_pkc_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_V_pkc_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_V_pkc_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_V_pkc_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Is_pkc_skc_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Is_pkc_skc_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Is_pkc_skc_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Is_pkc_skc_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Is_pkc_skc_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Is_pkc_skc_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Ip_pkc_skc_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Ip_pkc_skc_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Ip_pkc_skc_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Ip_pkc_skc_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Ip_pkc_skc_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_Ip_pkc_skc_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_III_pkc_skc_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_III_pkc_skc_keypair(
        public_key: *mut u8,
        secret_key: *mut u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_III_pkc_skc_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_III_pkc_skc_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_III_pkc_skc_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_III_pkc_skc_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_V_pkc_skc_new() -> *mut OQS_SIG;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_V_pkc_skc_keypair(public_key: *mut u8, secret_key: *mut u8)
        -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_V_pkc_skc_sign(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_V_pkc_skc_verify(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_V_pkc_skc_sign_with_ctx_str(
        signature: *mut u8,
        signature_len: *mut usize,
        message: *const u8,
        message_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        secret_key: *const u8,
    ) -> OQS_STATUS;
}
unsafe extern "C" {
    pub fn OQS_SIG_uov_ov_V_pkc_skc_verify_with_ctx_str(
        message: *const u8,
        message_len: usize,
        signature: *const u8,
        signature_len: usize,
        ctx: *const u8,
        ctxlen: usize,
        public_key: *const u8,
    ) -> OQS_STATUS;
}
